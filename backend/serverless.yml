service: api-server

custom:
  tableName: "users-table-${self:provider.stage}"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-2
  apiKeys:
    - api-key-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

resources:
  Resources:
    UsersDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

functions:
  api_server:
    handler: index.handler
    description: "API server"
    timeout: 30 # in seconds, default is 6
    events:
      - http:
          method: any
          path: /v1/{proxy+}
          cors: true
          private: true
